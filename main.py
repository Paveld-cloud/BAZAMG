import logging
from telegram.ext import ApplicationBuilder
from app.config import (
    TELEGRAM_TOKEN, WEBHOOK_URL, WEBHOOK_PATH, PORT,
    WEBHOOK_SECRET_TOKEN, TZ_NAME
)
from app.data import initial_load
from app.handlers import register_handlers

logging.basicConfig(level=logging.INFO, format="%(asctime)s %(levelname)s %(message)s")
logger = logging.getLogger("bot")

def main():
    logger.info(f"‚åö –ò—Å–ø–æ–ª—å–∑—É–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {TZ_NAME}")
    if not TELEGRAM_TOKEN:
        raise RuntimeError("TELEGRAM_TOKEN –Ω–µ –∑–∞–¥–∞–Ω")

    if not WEBHOOK_SECRET_TOKEN:
        logger.warning("WEBHOOK_SECRET_TOKEN –Ω–µ –∑–∞–¥–∞–Ω ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–∫–ª—é—á–∏—Ç—å –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞.")

    # –ï–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–æ —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    initial_load()

    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    register_handlers(app)

    if WEBHOOK_URL:
        full_webhook = f"{WEBHOOK_URL.rstrip('/')}/{WEBHOOK_PATH.lstrip('/')}"
        logger.info(f"üöÄ –°—Ç–∞—Ä—Ç—É–µ–º webhook-—Å–µ—Ä–≤–µ—Ä –Ω–∞ 0.0.0.0:{PORT}")
        logger.info(f"üåê –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook: {full_webhook}")
        app.run_webhook(
            listen="0.0.0.0",
            port=PORT,
            secret_token=WEBHOOK_SECRET_TOKEN or None,
            webhook_url=full_webhook,
            url_path=WEBHOOK_PATH.lstrip("/"),
            drop_pending_updates=True,
            allowed_updates=None,
        )
    else:
        logger.info("‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º polling (WEBHOOK_URL –Ω–µ –∑–∞–¥–∞–Ω)")
        app.run_polling(drop_pending_updates=True, allowed_updates=None)

if __name__ == "__main__":
    main()
